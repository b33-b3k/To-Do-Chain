{
  "contractName": "TodoList",
  "abi": [
    {
      "inputs": [],
      "name": "createTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"createTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ToDoList.sol\":\"TodoList\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ToDoList.sol\":{\"keccak256\":\"0xc41ee7e8a147d46be652fb881b9539095fe03cd0033650370b92e2333b8014a3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2908169390cbbef369ee4e93c5422f8873b21813e7c6d1a1d3acf15acf5c428f\",\"dweb:/ipfs/QmXF2Sj3PooJ616fSYpjHEZEdiTnBG3wvZ6g7aLyQ9mwXy\"]}},\"version\":1}",
  "bytecode": "0x608060405260008055348015601357600080fd5b5060a5806100226000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063a747649314602d575b600080fd5b60336035565b005b6000805490806042836049565b9190505550565b6000600019821415606857634e487b7160e01b81526011600452602481fd5b506001019056fea2646970667358221220dd726ad6d5d8b7202bee3fcdd2465901aae2eb571629d88c7a1df3f71166602264736f6c63430008000033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063a747649314602d575b600080fd5b60336035565b005b6000805490806042836049565b9190505550565b6000600019821415606857634e487b7160e01b81526011600452602481fd5b506001019056fea2646970667358221220dd726ad6d5d8b7202bee3fcdd2465901aae2eb571629d88c7a1df3f71166602264736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:252:1",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:1",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "61:189:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "100:115:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "121:3:1"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "130:3:1",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "135:10:1",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "126:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "126:20:1"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "114:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "114:33:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "114:33:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:1",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "170:4:1",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:15:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:15:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "195:3:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:4:1",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "188:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "188:17:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "188:17:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:1"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "88:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "84:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "84:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "74:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "74:17:1"
                  },
                  "nodeType": "YulIf",
                  "src": "71:2:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "224:20:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "235:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "242:1:1",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:13:1"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "224:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "43:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "53:3:1",
                "type": ""
              }
            ],
            "src": "14:236:1"
          }
        ]
      },
      "contents": "{\n    { }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(ret, 0x24)\n        }\n        ret := add(value, 1)\n    }\n}",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "66:137:0:-:0;;;108:1;91:18;;66:137;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "66:137:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;141:59;;;:::i;:::-;;;181:9;:11;;;:9;:11;;;:::i;:::-;;;;;;141:59::o;14:236:1:-;;-1:-1:-1;;74:17:1;;71:2;;;-1:-1:-1;;;114:33:1;;170:4;167:1;160:15;200:4;121:3;188:17;71:2;-1:-1:-1;242:1:1;231:13;;61:189::o",
  "source": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\ncontract TodoList {\r\n    uint taskCount = 0;\r\n\r\n    //make a function\r\n    function createTask() public {\r\n        taskCount++;\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\BIBEK\\Web3.0\\To-Do\\To-Do-Chain\\contracts\\ToDoList.sol",
  "ast": {
    "absolutePath": "project:/contracts/ToDoList.sol",
    "exportedSymbols": {
      "TodoList": [
        12
      ]
    },
    "id": 13,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 12,
        "linearizedBaseContracts": [
          12
        ],
        "name": "TodoList",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "mutability": "mutable",
            "name": "taskCount",
            "nodeType": "VariableDeclaration",
            "scope": 12,
            "src": "91:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "91:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "108:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10,
              "nodeType": "Block",
              "src": "170:30:0",
              "statements": [
                {
                  "expression": {
                    "id": 8,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "181:11:0",
                    "subExpression": {
                      "id": 7,
                      "name": "taskCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "181:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9,
                  "nodeType": "ExpressionStatement",
                  "src": "181:11:0"
                }
              ]
            },
            "functionSelector": "a7476493",
            "id": 11,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTask",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "160:2:0"
            },
            "returnParameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "170:0:0"
            },
            "scope": 12,
            "src": "141:59:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 13,
        "src": "66:137:0"
      }
    ],
    "src": "39:166:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2023-09-24T03:49:44.891Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}